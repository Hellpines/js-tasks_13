// 1. Отобразите в строке через пробел числа от n до 10 по возрастанию используя рекурсию
// Входные: 0 → Результат: 0 1 2 3 4 5 6 7 8 9 10
// Входные: 2 → Результат: 2 3 4 5 6 7 8 9 10
// Входные: 5 → Результат: 5 6 7 8 9 10

// let str = '';
// let n = 0;
// function func(){
//     if(n === 11) return n;
//     str += n + ' ';
//     n++
//     func()
// }
// func()
// console.log(str)

// 2. Отобразите в строке через пробел четные числа от 5 до 0 по убыванию используя рекурсию
// Входные: 5 → Результат: 4 2 0

// let str = '';
// function func(n){
//     if (n >= 0) {
//         if (n % 2 === 0) {
//             str += n + ' ';
//         }
//         func(n - 1);
//     }
// }
// func(5)
// console.log(str.trim())

// 3. На входе число n. Вычислите сумму натуральных чисел от 1 до n используя рекурсию
// Входные: 5 → Результат: 15
// Входные: 3 → Результат: 6
// Входные: 10 → Результат: 55

// let sum = 0;
// function func(n){
//     if(n > 0){
//         sum += n;
//         func(n-1);
//     }
// }
// func(10);
// console.log(sum);

// 4. Отобразите четные числа от 5 до 0 по убываю используя рекурсию
// Входные: 5 → Результат: 4 2 0

// let str = '';
// function func(i) {
//     if (i >= 0) {
//         if (i % 2 === 0) {
//             str += i + ' ';
//         }
//         func(i - 1);
//     }
// }
// func(5);
// console.log(str);

// 5. На входе число n = 2, step = 5. Возведите n в степень step используя рекурсию
// Входные: 2, 5 → Результат: 32
// Входные: 3, 4 → Результат: 81

// let result = 1;
// function func(n, step){
//     if(step == 0){
//         return 1;
//     }
//     result *= n;
//     func(n, step - 1);
// }
// func(3,4);
// console.log(result);

// 6. На входе массив array. Посчитайте количество элементов массива используя рекурсию
// Входные: [1, 2, 3, 4] → Результат: 4
// Входные: [10, 20, 30] → Результат: 3

// let count = 0;
// function func(arr){
//     if(arr.length == 0) return 0;
//     else{
//         count++;
//         arr.pop();
//     }
//     func(arr)
// }
// func([1, 2, 3, 4, 6, 7])
// console.log(count)

// 7. Вычислить факториал числа используя рекурсию
// Входные: 4 → Результат: 24
// Входные: 5 → Результат: 120
// Входные: 3 → Результат: 6

// function func(n){
//     if(n == 0) return 1;
//     else {
//         return n * func(n-1)
//     }
// }
// console.log(func(5))

// 8. Вычислите сумму массива чисел статичного массива используя рекурсию
// Входные: [1, 2, 3, 4] → Результат: 10
// Входные: [10, 20, 30] → Результат: 60

// function func(arr){
//     if(arr.length == 0) return 0;
//     else return arr.pop() + func(arr.slice(0, arr.length));
// }
// console.log(func([10, 20, 30]));

// 9. Реализуйте поиск максимального числа статичного массива используя рекурсию
// Входные: [1, 2, 3, 4] → Результат: 4
// Входные: [10, 5, 8] → Результат: 10

// let max = -Infinity;
// let i = 0;
// function func(arr){
//     if(i >= arr.length) return max;
//     if(max < arr[i]) {
//         max = arr[i];
//     }
//     i++;
//     func(arr);
// }
// func([10, 5, 8]);
// console.log(max);

// 10. На входе строка s. Проверьте, является ли строка палиндромом (читается одинаково в обе
// стороны), используя рекурсию.
// Входные: "madam" → Результат: True
// Входные: "hello" → Результат: False
// Входные: "racecar" → Результат: True

// let i = 0
// function func(s){
//     let str = s.split('')
//     if (i >= Math.floor(str.length / 2)) {
//         return false;
//     }
//     if(str[i] == str[str.length - 1 - i]) {
//         return true;
//     }
//     i++;
//     return func(s)
// }
// console.log(func("racecar"))

// 11. На входе целое число n. Найдите сумму цифр числа с использованием рекурсии.
// Входные: 123 → Результат: 6
// Входные: 456 → Результат: 15
// Входные: 987 → Результат: 24

// let sum = 0;
// function func(n){
//     if(n > 0){
//         sum += n % 10;
//         func(Math.floor(n / 10));
//     }
// }
// func(456)
// console.log(sum);

// 12. *На входе вложенный список, например [1, [2, [3]], 4]. Вычислите сумму всех чисел в этом списке,
// используя рекурсию.
// Входные: [1, [2, [3]], 4] → Результат: 10
// Входные: [5, [6, [7, [8]]]] → Результат: 26

// let sum = 0;
// function func(arr){
//     let arr1 = arr.flat(Infinity);
//     if(arr1.length == 0) return 0;
//     else return arr1.pop() + func(arr1.slice(0, arr1.length));
// }

// console.log(func([5, [6, [7, [8]]]]))